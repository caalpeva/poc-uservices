#!/bin/echo "source me !"
# Requires: /../../dependencies/downloads/poc-bash-master/includes/print-utils.src
# 	    /../../dependencies/downloads/poc-bash-master/includes/trace-utils.src
#       /../../dependencies/downloads/poc-bash-master/includes/progress-bar-utils.src
#           /../../utils/uservices-utils.src

##########################
#  HLEM GLOBAL VARIABLES  #
##########################
HELM_NAMESPACE=""
HELM_LABELS=""

##########################
#   BASIC HELM METHODS   #
##########################

function helm::showSearchUsage() {
  print_info "Show helm search usage"
  xtrace on
  helm search --help
  xtrace off
  checkInteractiveMode
}

function helm::searchChartsFromHub() {
  print_info "Search helm charts from Artifact Hub"
  xtrace on
  helm search hub $@
  xtrace off
  checkInteractiveMode
}

function helm::searchChartsFromRepos() {
  print_info "Search helm charts from repositories"
  xtrace on
  helm search repo $@
  xtrace off
  checkInteractiveMode
}

function helm::addRepo() {
  xtrace on
  helm repo add $1 $2
  xtrace off
}

function helm::listRepos() {
  print_info "List the repositories"
  xtrace on
  helm repo list
  xtrace off
  checkInteractiveMode
}

function helm::updateRepos() {
  print_info "Update information of available charts locally from chart repositories"
  xtrace on
  helm repo update
  xtrace off
}

function helm::removeRepo() {
  xtrace on
  helm repo remove $1
  xtrace off
}

function helm::createChart() {
  print_info "Create chart"
  xtrace on
  helm create $@
  xtrace off
  checkInteractiveMode
}

function helm::lintChart() {
  print_info "Validate that the chart is well formed"
  xtrace on
  helm lint $@
  xtrace off
}

function helm::packageChart() {
  print_info "Package a chart directory into a chart archive"
  xtrace on
  helm package $@
  xtrace off
  checkInteractiveMode
}

function helm::showDefaultAllChartValues() {
  print_debug "Inspect chart and display the content of the default values.yaml file"
  xtrace on
  helm show values $@
  xtrace off
  checkInteractiveMode
}

function helm::showDefaultLimitedChartValues() {
  lines=$1
  shift
  xtrace on
  helm show values $@ | head -$lines
  xtrace off
  checkInteractiveMode
}

function helm::installChart() {
  print_info "Install chart"
  xtrace on
  helm install $@
  xtrace off
  checkInteractiveMode
}

function helm::installChartSilently() {
  print_info "Install chart (silently)"
  xtrace on
  helm install $@ > /dev/null
  xtrace off
  checkInteractiveMode
}

function helm::getReleaseFromChartInstallation() {
  xtrace on
  helm install $@ | grep NAME: | awk '{print $2}'
  xtrace off
}

function helm::getChartReleases() {
  print_info "List chart releases"
  xtrace on
  helm ls
  xtrace off
  checkInteractiveMode
}

function helm::getChartReleasesByPrefix() {
  filter=$1
  shift
  helm::manageArguments $@
  xtrace on
  helm ls ${HELM_NAMESPACE:+--namespace $HELM_NAMESPACE}| grep ^$filter
  xtrace off
}

function helm::showChartReleasesByPrefix {
  status=$(helm::getChartReleasesByPrefix $@)
  helm ls | head -1
  echo "$status"
  checkInteractiveMode
}

function helm::getReleaseStatus() {
  print_info "Check the status of release"
  xtrace on
  helm status $@
  xtrace off
  checkInteractiveMode
}

function helm::getCustomValues() {
  print_info "Get custom values"
  xtrace on
  helm get values $@
  xtrace off
  checkInteractiveMode
}

function helm::upgradeChart() {
  print_info "Upgrade chart release"
  xtrace on
  helm upgrade $@
  xtrace off
  checkInteractiveMode
}

function helm::upgradeChartSilently() {
  print_info "Upgrade chart release (silently)"
  xtrace on
  helm upgrade $@ > /dev/null
  xtrace off
  checkInteractiveMode
}

function helm::historyChart() {
  print_info "Show chart release history"
  xtrace on
  helm history $@
  xtrace off
  checkInteractiveMode
}

function helm::rollbackChart() {
  print_info "Rollback chart release"
  xtrace on
  helm rollback $@
  xtrace off
  checkInteractiveMode
}

function helm::uninstallChart() {
  print_info "Uninstall chart release"
  xtrace on
  helm uninstall $@
  xtrace off
}

function helm::listChartDependencies() {
  print_info "List chart dependencies"
  xtrace on
  helm dependency list $@
  xtrace off
}

function helm::updateChartDependencies() {
  print_info "Update chart dependencies"
  xtrace on
  helm dependency update $@
  xtrace off
}

# echo "mypass" | helm registry login $REGISTRY_URL -u myuser --password-stdin

function helm::pullChart() {
  xtrace on
  helm pull $@
  xtrace off
  checkInteractiveMode
}

function helm::pushChart() {
  xtrace on
  helm push $@
  xtrace off
  checkInteractiveMode
}

##############################
#  AUXILIARY HELM METHODS  #
##############################

function helm::showLogs() {
  xtrace on
  docker logs $1
  xtrace off
}

function helm::resetGlobalVariables() {
  HELM_NAMESPACE=""
  HELM_LABELS=""
}

function helm::manageArguments() {
  helm::resetGlobalVariables
  OPTIND=1
  while getopts "n:l:" option; do
    case ${option} in
      n) HELM_NAMESPACE=$OPTARG
         ;;
      l) HELM_LABELS=$OPTARG
         ;;
      ?) echo "Invalid option: $OPTARG" 1>&2
         ;;
      :) echo "Invalid option: $OPTARG requires an argument" 1>&2
    esac
  done
  shift $((OPTIND-1))
}
