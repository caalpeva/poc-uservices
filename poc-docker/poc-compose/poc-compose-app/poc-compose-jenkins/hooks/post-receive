#!/bin/bash

# Upgrading to Jenkins 2.176.2
# Improved CSRF protection SECURITY-626
# CSRF tokens (crumbs) are now only valid for the web session they were created
# in to limit the impact of attackers obtaining them. Scripts that obtain a crumb
# using the /crumbIssuer/api URL will now fail to perform actions protected from
# CSRF unless the scripts retain the web session ID in subsequent requests.
#	Scripts could instead use an API token, which has not required a CSRF token (crumb) since Jenkins 2.96.
# To disable this improvement you can set the system property
# hudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID to true.
# Alternatively, you can install the Strict Crumb Issuer Plugin which provides
# more options to customize the crumb validation. It allows excluding the web
# session ID from the validation criteria, and instead e.g. replacing it with
# time-based expiration for similar (or even better) protection from CSRF.
# https://jenkins.io/doc/upgrade-guide/2.176/#SECURITY-626

CONTAINER_JENKINS="poc_server_jenkins"
JENKINS_CRUMB_URL="http://$CONTAINER_JENKINS:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)"
JENKINS_USER="admin"
JENKINS_PASSWORD="admin"
JOB1_NAME="poc-app-maven-autogenerated"
JOB2_NAME="poc-app-maven-with-params-autogenerated"

# Get branch name from ref head
if ! [ -t 0 ]; then
  read -a ref
fi

IFS='/' read -ra REF <<< "${ref[2]}"
branch="${REF[2]}"

if [ $branch == "master" ]; then
  echo "Get CRUMB from $CONTAINER_JENKINS"
  CRUMB=$(curl -u "$JENKINS_USER:$JENKINS_PASSWORD" -s "$JENKINS_CRUMB_URL")
  echo $CRUMB

  echo "Make request to $CONTAINER_JENKINS to launch job $JOB1_NAME"
  curl -u "$JENKINS_USER:$JENKINS_PASSWORD" -H "$CRUMB" -X POST http://${CONTAINER_JENKINS}:8080/job/${JOB1_NAME}/build?delay=0sec

  echo "Make request to $CONTAINER_JENKINS to launch job $JOB2_NAME"
  curl -u "$JENKINS_USER:$JENKINS_PASSWORD" -H "$CRUMB" -X POST http://${CONTAINER_JENKINS}:8080/job/${JOB2_NAME}/buildWithParameters?FLAG=true&FILENAME=appFromHook&VERSION=5

  if [ $? -eq 0 ] ; then
    echo "OK"
  else
    echo "ERROR"
  fi
fi
