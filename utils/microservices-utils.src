#!/bin/echo "source me !"

#############
# VARIABLES #
#############

SCRIPT_NAME=$(basename $0)
INTERACTIVE_MODE=false
SKIP_CLEANUP_MODE=false

#############
# FUNCTIONS #
#############

function usage() {
  cat << EOF
Usage: $SCRIPT_NAME [ -h | -i | -s ]
    Options help:
    -h:  Shows option help
    -i:  Allows the user to perform the execution step by step
    -s:  Skip cleanup
EOF
  exit ${1:-1}
}

function checkArguments() {
  print_debug "Checking arguments ($#)..."

  # Parse the options
  while getopts "his" option; do
    case $option in
      h) usage 0
         ;;
      i) INTERACTIVE_MODE=true
         ;;
      s) SKIP_CLEANUP_MODE=true
         ;;
      ?) #echo -e "\n$SCRIPT_NAME: Invalid command line option [$OPTARG]\n"
         usage
         ;;
    esac
  done
}

# Check interactive mode
function checkInteractiveMode() {
  #print_debug "Checking interactive mode..."
  if [ $INTERACTIVE_MODE = true ]; then
    echo "Press ENTER to continue, CTRL-C to abort ..."
    read dummy
  fi
}

# Check cleanup mode
function checkCleanupMode() {
  #print_debug "Checking cleanup mode..."
  if [ $SKIP_CLEANUP_MODE = false ]; then
	cleanup
  fi
}

# Set terminal signals
function setTerminalSignals() {
  print_info "Setting terminal signals..."
  trap handleTermSignal INT QUIT TERM KILL
}

function evalCommand  {
  command=$*
  echo "+ $command"
  eval "$command"
  return $?
}

function executeCurl  {
  evalCommand curl $*
  return $?
}
